// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies_Watchlist_DB.Data;

#nullable disable

namespace Movies_Watchlist_DB.Migrations
{
    [DbContext(typeof(WatchlistDbContext))]
    [Migration("20231127212618_Migrace5")]
    partial class Migrace5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movies_Watchlist_DB.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CsfdUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Movie");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Movies_Watchlist_DB.Models.DeletedMovie", b =>
                {
                    b.HasBaseType("Movies_Watchlist_DB.Models.Movie");

                    b.HasDiscriminator().HasValue("DeletedMovie");
                });

            modelBuilder.Entity("Movies_Watchlist_DB.Models.TestDeletedMovie", b =>
                {
                    b.HasBaseType("Movies_Watchlist_DB.Models.Movie");

                    b.HasDiscriminator().HasValue("TestDeletedMovie");
                });

            modelBuilder.Entity("Movies_Watchlist_DB.Models.TestMovie", b =>
                {
                    b.HasBaseType("Movies_Watchlist_DB.Models.Movie");

                    b.HasDiscriminator().HasValue("TestMovie");

                    b.HasData(
                        new
                        {
                            Id = 200,
                            CsfdUrl = "test",
                            Name = "test",
                            PosterUrl = "test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
